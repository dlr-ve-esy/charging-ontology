stages:
  - build
  - deploy
  - paper

.before_script_template: &deploy-test
  before_script:
    - pip install poetry==1.8.1
    - poetry install
    - POETRY_ENV=$(poetry env info -p)
    - source ${POETRY_ENV}/bin/activate

.doc_rules:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - docs/**/*
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_REF_NAME =~ /^pages/
      changes:
        - docs/**/*

.paper_rules:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - paper/**/*
        - scripts/visualization
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_REF_NAME =~ /^pages/
      changes:
        - paper/**/*
        - scripts/visualization

pages:
  stage: deploy
  <<: *deploy-test
  script:
    - mkdocs build --strict --verbose --site-dir public
  artifacts:
    paths:
      - public
  rules:
    - !reference [.doc_rules, rules]

ontology:
  image: ubuntu:latest
  services:
    - name: eclipse-temurin:latest
      alias: java
  stage: build
  script:
    - make all
  artifacts:
    paths:
      - build/*

figures-reqs:
  stage: paper
  image: eclipse-temurin:latest
  script:
    - mkdir tmp
    - cp assets/catalog.xml  tmp/catalog.xml
    - curl -L -o robot.jar https://github.com/ontodev/robot/releases/download/v1.9.5/robot.jar
    - bash scripts/cco-imports/cco-extracted.sh
    - bash scripts/oeo-imports/oeo-extracted.sh
    - bash scripts/visualization/icity-extract.sh
    - bash scripts/visualization/viz-transformations.sh
  artifacts:
    paths:
      - tmp/*
  rules:
    - !reference [.paper_rules, rules]

figures:
  stage: paper
  needs:
    - job: figures-reqs
      artifacts: true
  image: etsinfra/docker-python-graphviz:3.10.7
  script:
    - pip install py-horned-owl pygraphviz
    - python scripts/visualization/paper-diagrams.py
    - python scripts/visualization/icity-diagram.py
  artifacts:
    paths:
      - tmp/*.dot
      - tmp/svg/*.svg
  rules:
    - !reference [.paper_rules, rules]

paper:
  stage: paper
  needs:
    - job: figures
      artifacts: true
  image: tumi5/latex
  script:
    - cd paper
    - latexmk -pdf -shell-escape paper.tex
  artifacts:
    paths:
      - paper/paper.pdf
  rules:
    - !reference [.paper_rules, rules]
